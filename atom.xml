<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乱七八</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weibo.com/queshizhiniaoku/home/"/>
  <updated>2018-08-24T18:35:42.400Z</updated>
  <id>https://weibo.com/queshizhiniaoku/home/</id>
  
  <author>
    <name>Anveena</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>睡前反思</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2018/08/01/%E7%9D%A1%E5%89%8D%E5%8F%8D%E6%80%9D/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2018/08/01/睡前反思/</id>
    <published>2018-07-31T18:43:20.000Z</published>
    <updated>2018-08-24T18:35:42.400Z</updated>
    
    <content type="html"><![CDATA[<p>这已经是2018年的最后五个月了,我在这奇怪的大半年中.渐渐的发现改变别人的想法,做法,素质,是一件多么困难的事情,我只能做好我自己,也没有必要去争个是非对错,因为这个过程中已经没有什么营养可以汲取了,除非和自己的利益相关,其他还是爱咋咋地吧,有些不满足于以前宁为鸡头不为凤尾的想法了,虽然年初看到拿破仑也是这样的想法还很开心,我是一个渺小而且自闭的人,很少对别人提要求,如果再这样下去,怕是被砂石淹没,甚至现在已经发生,有些方面,会很心安理得的对自己降低要求,融入其中,和那些值得尊敬的人对话,使我受益匪浅,相反的,有些朽木,我不该浪费时间,我应该对自己要求严格一些,哪怕在猴子堆里<br>期待也分档次的,能人达士的期待可能真的是出于欣赏,其他人的.邹忌说得对.我辜负了很多珍贵的期待,却频频为举手实现的期待而沾沾自喜.<br>叶卡琳捷娜.拉美西斯.我想好好玩一把22国32城邦的文明5<br>我要睡了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这已经是2018年的最后五个月了,我在这奇怪的大半年中.渐渐的发现改变别人的想法,做法,素质,是一件多么困难的事情,我只能做好我自己,也没有必要去争个是非对错,因为这个过程中已经没有什么营养可以汲取了,除非和自己的利益相关,其他还是爱咋咋地吧,有些不满足于以前宁为鸡头不为凤
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>2018年的我眼中的lv</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2018/07/09/2018%E5%B9%B4%E7%9A%84%E6%88%91%E7%9C%BC%E4%B8%AD%E7%9A%84lv/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2018/07/09/2018年的我眼中的lv/</id>
    <published>2018-07-09T10:17:33.000Z</published>
    <updated>2018-08-24T18:35:18.209Z</updated>
    
    <content type="html"><![CDATA[<p>中人以下,不语上.<br>见贤思齐,不贤改之.<br>lv决定眼界.<br>关我p事.<br>独善其身.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;中人以下,不语上.&lt;br&gt;见贤思齐,不贤改之.&lt;br&gt;lv决定眼界.&lt;br&gt;关我p事.&lt;br&gt;独善其身.&lt;/p&gt;

      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>甘拜下风_寻找类地文明</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2018/05/02/%E7%94%98%E6%8B%9C%E4%B8%8B%E9%A3%8E-%E5%AF%BB%E6%89%BE%E7%B1%BB%E5%9C%B0%E6%96%87%E6%98%8E/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2018/05/02/甘拜下风-寻找类地文明/</id>
    <published>2018-05-01T17:39:43.000Z</published>
    <updated>2018-08-24T18:34:05.046Z</updated>
    
    <content type="html"><![CDATA[<p>以前一直觉得东方红卫星发射的寻找类地文明的信号是个笑话,后来才明白人家根本就没想着和外球佬通讯…<br>我一直觉得和外球佬的通讯不能太复杂,却要经典,比如勾股定理!<br>消息也不应该太长,太多的东西反而提高了解密难度…<br>但是怎么发?<br>很难知道包大小,起始位置,编码格式等等必要内容,虽然包大小和起始位置由于所有的包都一样,多接一会儿也能推测,可是编码格式就粉碎了,图片外球佬可未必认你rgba,文字更是不可能,声音且不说解码之难,就算解出来又能怎样<br>但是我才知道.原来找俩质数,随便一乘便是包的大小,由此推出1Byte是几位难度骤降,假如某个外球佬习惯把每一Byte列出来,还顺手换了行<br>10100100011,<br>11100000101,<br>…<br>又脑洞大开,1用黑点,0用白点<br>一张图片就出来了<br>那画个345三角形<br>011 100 101 边上标注<br>再换行写出2进制的9 16 25<br>我觉得就很理想了<br>解码难度下降78个维度<br>这些应该比解密甲骨文简单多<br>上述内容并非我想出来的<br>只是看到一个质数积的说法,解决了我一大困扰(假设外国佬也在用无线电,并且对此频率有监听的前提下,如何表明是有意义,非噪声的信号)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前一直觉得东方红卫星发射的寻找类地文明的信号是个笑话,后来才明白人家根本就没想着和外球佬通讯…&lt;br&gt;我一直觉得和外球佬的通讯不能太复杂,却要经典,比如勾股定理!&lt;br&gt;消息也不应该太长,太多的东西反而提高了解密难度…&lt;br&gt;但是怎么发?&lt;br&gt;很难知道包大小,起始位置,
      
    
    </summary>
    
      <category term="思考" scheme="https://weibo.com/queshizhiniaoku/home/categories/think/"/>
    
    
  </entry>
  
  <entry>
    <title>微博啊,你可</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/12/11/%E5%BE%AE%E5%8D%9A%E5%95%8A-%E4%BD%A0%E5%8F%AF/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/12/11/微博啊-你可/</id>
    <published>2017-12-11T00:35:18.000Z</published>
    <updated>2018-08-24T18:33:08.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="真是个是非之地"><a href="#真是个是非之地" class="headerlink" title="真是个是非之地"></a>真是个是非之地</h1><p>意外坠楼莫名其妙就上了热搜,说实话我对澎湃新闻的印象并不好,是通过对那个日本留学生案中关键人物刘鑫的采访感受到的,通过刘鑫曝光的微信截图来看,很多都是记者杜撰出来的,虽然我也觉得刘鑫可能确实做的没她说的那么漂亮,但应该也没记者说的那么不堪<br>这次极限运动意外坠楼视频的大范围传播让我觉得,微博真是个是非之地,很多低素质的记者也令人窒息<br>就像前几天的红黄蓝事件,被采访的三个家长,仅有一个家长在17分钟的拜访中提到了2分半左右的性侵内容,而且现场那么多手机,那么多记者,有什么声音是无法传出的,但因为一些公众号,记者的引导性转发,导致很多人相信确有性侵之事,甚至至今还有人使用三色头像,令人扼腕<br>微博因为网络普及,门槛降低,更像一个菜市场,大妈A的言论很容易被大妈B告知大妈C,导致很多不负责任的言论出现.有人举例论证说政府不作为,其实在人民日报的官博里搜索就可以,比如什么天津爆炸死刑了多少多少人啊之类,很震撼的是这类微博的转发点赞评论并没有一条超过5000,而说政府不作为,这些事都不了了之了的一些评论,点赞反而过5万…本来就是一个太平盛世,只是有个别事件令人难过,在微博看来好像政府已经腐败不堪,随时应当揭竿而起了…<br>完全不知道从哪儿获取资讯了<br>优质的内容极少,实在是太菜市场了…<br>但是我不看微博又不能主动去@很重要的人,就更难过了…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;真是个是非之地&quot;&gt;&lt;a href=&quot;#真是个是非之地&quot; class=&quot;headerlink&quot; title=&quot;真是个是非之地&quot;&gt;&lt;/a&gt;真是个是非之地&lt;/h1&gt;&lt;p&gt;意外坠楼莫名其妙就上了热搜,说实话我对澎湃新闻的印象并不好,是通过对那个日本留学生案中关键人物刘鑫的
      
    
    </summary>
    
      <category term="大喷菇" scheme="https://weibo.com/queshizhiniaoku/home/categories/rude/"/>
    
    
  </entry>
  
  <entry>
    <title>有趣的舆论</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/07/18/%E6%9C%89%E8%B6%A3%E7%9A%84%E8%88%86%E8%AE%BA/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/07/18/有趣的舆论/</id>
    <published>2017-07-18T11:05:31.000Z</published>
    <updated>2018-08-24T18:32:12.077Z</updated>
    
    <content type="html"><![CDATA[<p>最近新闻类APP总会有一两条关于空调需不需要加氟的,不知道是不是董董事长造手机亏了,要在老本行上赚回来,想一下北方第一大批家用空调也该换代了,行车记录仪火的那阵子,碰瓷的就特别多,这种暗广还真是有趣呢,话又说回来,很多表面不相干的事情,背后总有奇奇怪怪的联系,比如口红火了说明经济衰退,共享单车带动期货市场橡胶涨价,勒索病毒火了导致显卡涨价,有些是无心的,但是想多了又会有那种阴谋论的感觉,比如最近头条不是高温就是乐视,要么就是一些明星小花边,却不知与印度对峙的怎么样了…控制舆论比起引导舆论,还是差那么一个层次啊…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近新闻类APP总会有一两条关于空调需不需要加氟的,不知道是不是董董事长造手机亏了,要在老本行上赚回来,想一下北方第一大批家用空调也该换代了,行车记录仪火的那阵子,碰瓷的就特别多,这种暗广还真是有趣呢,话又说回来,很多表面不相干的事情,背后总有奇奇怪怪的联系,比如口红火了说
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>Equatable</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/06/07/Equatable/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/06/07/Equatable/</id>
    <published>2017-06-07T07:42:27.000Z</published>
    <updated>2018-08-24T18:32:16.212Z</updated>
    
    <content type="html"><![CDATA[<p>有些时候,会设计一些工业产品.​<br>洗衣机如何判断漂洗干净?上一次液体的电阻和这一次液体的电阻,差值&lt;某个范围,就算漂洗干净了.<br>烧水壶如何判断水烧开?5s判断一次,液体的温度是否有变化.<br>当然这个第二条可能问题比较大.但是追求沸腾的极限又不想配备气压计,也只能如此了吧.<br>至今为止,最喜欢的劳动便是洗碗.<br>因为这个很容易确定是否洗干净了,并且大家的判断标准不会差很多,甚至也有专业的说法:既不聚成小液滴,也不成股流下.<br>不喜欢做饭也是一样的理由,有些人不喜欢吃辣的,有些人不爱吃醋,甚至有些人从食材下手,做的冬瓜还吃个J.​​<br>喜欢一切有公理判定的东西,不喜欢去个人观点判断.<br>以前比较生猛,这人傻逼吧,怎么能这样想.<br>现在觉得,这是多么平常的一件事情啊.<br>怎么能!=自己即为SB.<br>这个即为,完全不讲逻辑.<br>可能会讲一些诸如我可理解不了,我做不出之类的话.却很难去判断对错了.<br>就像吃饭,像听歌,像那一切不确定的.<br>正因为这一切不确定.才能判断出,嗨呀!我俩好配!​​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有些时候,会设计一些工业产品.​&lt;br&gt;洗衣机如何判断漂洗干净?上一次液体的电阻和这一次液体的电阻,差值&amp;lt;某个范围,就算漂洗干净了.&lt;br&gt;烧水壶如何判断水烧开?5s判断一次,液体的温度是否有变化.&lt;br&gt;当然这个第二条可能问题比较大.但是追求沸腾的极限又不想配备气压
      
    
    </summary>
    
      <category term="思考" scheme="https://weibo.com/queshizhiniaoku/home/categories/think/"/>
    
    
  </entry>
  
  <entry>
    <title>狼人杀</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/05/25/%E7%8B%BC%E4%BA%BA%E6%9D%80/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/05/25/狼人杀/</id>
    <published>2017-05-24T20:54:20.000Z</published>
    <updated>2018-08-24T18:30:34.345Z</updated>
    
    <content type="html"><![CDATA[<p>我小的时候,我爸会灌输一些中共的思想给我,比如不管是黑猫还是白猫,抓到老鼠就是好猫,或者实践是检验真理的唯一标准等等…<br>关于后者,我在玩狼人杀的过程中,有了越来越多的感受<br>首先,每个人不同的角色决定了不同的已知信息,只要谣言不过于冲击这些,人们会奉为真理,比如微波炉加热会致癌,因为不管是癌变还是微波炉,很大一部分人都是一知半解,已知信息太少,所以并不会有冲突,并且结论也是简单的,那就很容易取得这些人的信任…<br>其次,每个人都会有自己的推论,这些推论可能在别人眼里是不讲道理的,但是如果你去否认这些推论,那就很难在别人内心建立信任,比如我现在讲微波炉加热只是分子震动摩擦发热.和传统的物理加热没有区别,前面那部分人就会觉得,哦他在骗我,他编了一个神奇的故事,我虽然说不出他语言中的逻辑错误,但是他就是在骗我,我不应该相信他,为什么会失去信任,因为不仅背离了他的认知,而且要告诉他的太多了,一个人很难去瞬间接受大量的信息…<br>不过例外的是,如果被告知的结论大幅度超出一个人的想象.那就可以取得信任,比如代码没写,要说没保存,可能需要大量的辅助描述,老师才会勉强相信你是没保存,但是如果讲,嗨呀我电源炸了俩电容,开不起机了,那胜算就有了…这个例子太差了,还是拿狼人杀来说吧,一般我焊跳预言家,都会说第一晚死的人是狼人,随便说说很容易取得信任…太离奇了…人们反而会相信<br>最后吧,我觉得要取得一个人的信任很长时间,那就不能有欺骗,很少有焊跳的预言家能在决赛还被信任,真正的预言家却总是被铭记…短期内,信任和逻辑什么的没一毛钱关系,只是看别人愿不愿意接受…<br>再蠢的人,也不能被骗一辈子,再机智的人,也不能骗不想相信你的人一次,哪怕你句句事实,不听不听,王八念经😊<br>人啊!根本不讲道理,只愿意信他愿意信的…<br>实践虽然可以检验真理,可是真理却未必有人信,突然想起wlk台服一个神道具翻译(天堂殞落,萬言千謊之匕),想想过了这么多年,WOW再也没有memento of tyrande这么令人扼腕的道具了…<br>俱怀逸兴壮思飞,欲上青天揽明月,塞上长城空自许,镜中衰鬓已先斑…<br>WOW已经不是那个WOW了…我也不是那个我了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我小的时候,我爸会灌输一些中共的思想给我,比如不管是黑猫还是白猫,抓到老鼠就是好猫,或者实践是检验真理的唯一标准等等…&lt;br&gt;关于后者,我在玩狼人杀的过程中,有了越来越多的感受&lt;br&gt;首先,每个人不同的角色决定了不同的已知信息,只要谣言不过于冲击这些,人们会奉为真理,比如微
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>稳健</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/05/04/%E7%A8%B3%E5%81%A5/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/05/04/稳健/</id>
    <published>2017-05-04T03:54:05.000Z</published>
    <updated>2018-08-24T18:29:03.758Z</updated>
    
    <content type="html"><![CDATA[<p>我以为稳健是说心态…<br>你来我少林寺门口聒噪,极尽挑衅之能事,我却紧闭山门,实在是没控搭理…如做十说三的苹果,一众跳梁小丑四处抹黑,拿一些没P用的点来吹,仿佛战胜了苹果,然而……………哎呦真是令人脸红的事情啊…<br>这就是稳重呀,眼界起步就高,真的看不到渣滓肖小哗众取宠般的挑衅…<br>有些时候被撩到G点,回应一下,突然就觉得实力下降了3个8度.比如腾讯那时候突然怼360…竟然把360当对手…不稳重啊!<br>除了稳重,稳健还有一些健康的意思…<br>一般小人的心态,就没健康过…被迫害妄想症 世界中心等等等等…<br>A轻拂衣袖:请出招!<br>B捂住口鼻:贼厮鸟恁地狡猾,还没开打就放毒害老子,还好老子机智,看穿了你拂袖放毒的阴谋!看破真相的我多么牛逼!<br>A一记直拳,B躺倒,A离开…<br>这种B我真的见得多…贱如蝼蚁,还觉得有人要害他…与其揣摩对方想法,不如问问自己也配?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我以为稳健是说心态…&lt;br&gt;你来我少林寺门口聒噪,极尽挑衅之能事,我却紧闭山门,实在是没控搭理…如做十说三的苹果,一众跳梁小丑四处抹黑,拿一些没P用的点来吹,仿佛战胜了苹果,然而……………哎呦真是令人脸红的事情啊…&lt;br&gt;这就是稳重呀,眼界起步就高,真的看不到渣滓肖小哗众取
      
    
    </summary>
    
      <category term="大喷菇" scheme="https://weibo.com/queshizhiniaoku/home/categories/rude/"/>
    
    
  </entry>
  
  <entry>
    <title>矮子</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/04/20/%E7%9F%AE%E5%AD%90/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/04/20/矮子/</id>
    <published>2017-04-19T22:03:42.000Z</published>
    <updated>2018-08-24T18:28:13.429Z</updated>
    
    <content type="html"><![CDATA[<p>看到一篇微博说八路军抓到俘虏问一波是否投降,投降不杀之类的…突然就想到这些俘虏的去向了,干你娘杀了老子战友特么现在投降免死?我不能当一个战士,因为我接受不了这样的军规条例…<br>虽然我人生经历不长但是五彩斑斓,几乎可以断言奸淫妇女虐杀俘虏之类的行为这个投降群体应该是干的最多的…<br>狗仗人势,狐假虎威,无外如是…<br>做一个这样的矮子有什么好处呢?<br>首先他下限高,最后的结局一定不是所属群体里最差的…<br>其次他的情绪里忏悔和难过比较少,没有仁义廉耻,没有原则…这种人一般都很难难过起来…<br>最后,很难被针对,一个群体里这样的人很多,枪打出头鸟,这种人八成会起哄哄出去一个二百五…有个笑话说村里面地下党员往前走一步,于是大家都退了一步…大概就是这个意思…<br>然而坏处也对应…<br>上限低,这样的渣滓自己带头只有灭亡…<br>我就不能这样,我本来就是不甘居人下的性格,再跟这么个傻逼,卧槽我不要他命?<br>甘为附骥…我这里得全方位征服,专业强,人格优秀,品德高尚,样样自叹不如…<br>所以我肯定是那种,举锤就上,干你姥姥我xxx第一个不服!<br>像我这样的选手,100个里最起码有99个尘归尘土归土,可能有那样的人中骐骥无双国士,运筹帷幄功成名就…<br>算一下期望也知道当个矮子比较划算…但是我觉得我这么个顽固选手,在磨圆滑之前,八成是粉身碎骨了吧…<br>其实还有一种比较禅的做法,就是你们争你们的,老夫自己种红薯…这样的做法我只能羡慕一下,河中百舸,焉能不争…<br>我不会成为矮子吧……………</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看到一篇微博说八路军抓到俘虏问一波是否投降,投降不杀之类的…突然就想到这些俘虏的去向了,干你娘杀了老子战友特么现在投降免死?我不能当一个战士,因为我接受不了这样的军规条例…&lt;br&gt;虽然我人生经历不长但是五彩斑斓,几乎可以断言奸淫妇女虐杀俘虏之类的行为这个投降群体应该是干的最
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>假如</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/03/17/%E5%81%87%E5%A6%82/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/03/17/假如/</id>
    <published>2017-03-17T12:52:43.000Z</published>
    <updated>2018-08-24T18:26:51.380Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1、突然之间给你一亿人民币<br>2、突然之间你获得了读心术<br>3、突然之间学会了时光倒流<br>4、突然之间获得所有异性的喜爱<br>微博上看到了这个,我觉得3这个选项之imbalance足以使这个能力只能使用一次,总是开挂会没意思吧…<br>我觉得人生还是要有些盼头,想要的全都不劳而获得到了,就会无聊吧…就像各种金手指,用一个,与之相关的游戏距离卸载就不远了…<br>没有岁月可回头…<br>还能怎么办?但是好想特么的的做一次弊…难受</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;1、突然之间给你一亿人民币&lt;br&gt;2、突然之间你获得了读心术&lt;br&gt;3、突然之间学会了时光倒流&lt;br&gt;4、突然之间获得所有异性的喜爱&lt;br&gt;微博上看到了这个,我觉得3这个选项之imbalance足以使这个能力只能使用一次,总是开挂会没意思吧…&lt;br
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>关于路由器和鼠标垫</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/02/09/%E5%85%B3%E4%BA%8E%E8%B7%AF%E7%94%B1%E5%99%A8%E5%92%8C%E9%BC%A0%E6%A0%87%E5%9E%AB/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/02/09/关于路由器和鼠标垫/</id>
    <published>2017-02-09T08:41:02.000Z</published>
    <updated>2018-08-24T18:28:05.235Z</updated>
    
    <content type="html"><![CDATA[<p>这是我很早就确定下来我孩子的名字.<br>但是有人很讨厌给我讲说什么路由器与网线,鼠标垫与鼠标.<br>那我觉得这就很不好了<br>由于对王垠这个选手的好感,他这个其实是亡垠的意思.就是没有边界.多屌啊.<br>那我就选了一个布字<br>包举宇内,席卷天下,囊括万物.<br>还有一代战神吕奉先.<br>然后说到这个女性的名字.<br>我莫名第一个想到的是zhuo这个音.<br>灼灼其华的灼​,卓尔不群的卓.<br>都还好吧.<br>我不觉得名字要起的有多么独特,像我本人这个名字,重名不过30个.然而知道的人也就那么几个.<br>远不及黄鹤,马云.<br>​还有那种龑之类的,专用来做名字的.就不说准考证和身份证上有多难看了.​老师也会尴尬.什么刈彧之流,都太烦躁.<br>而且现在的算命先生也不老实,他们的命名法则也是与时俱进的,导致同一年代的名字都差不多,热门文字也是不断改朝换代.00后yuxin之流简直不谈.​<br>我记得我的新华字典上注名是一个炆字.不知为何.还记得那时候玩游戏,根本不知道什么UTF8之类的汉字编码,玩家的ID又会影响角色的初始属性,诸如纛啊,爨啊,这样的字也试过不少.感觉小时候起名字追求一个标新立异.<br>现在吧,只是觉得,啊呦不就是个名字么,想怎么起还要讲个道理?<br>将来我孩子要和我BB名字的事情,我就翻出这片文章给他看,你小伙子差点儿就叫路由器/鼠标垫了你知道么?还是你亲爹亲吧?​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是我很早就确定下来我孩子的名字.&lt;br&gt;但是有人很讨厌给我讲说什么路由器与网线,鼠标垫与鼠标.&lt;br&gt;那我觉得这就很不好了&lt;br&gt;由于对王垠这个选手的好感,他这个其实是亡垠的意思.就是没有边界.多屌啊.&lt;br&gt;那我就选了一个布字&lt;br&gt;包举宇内,席卷天下,囊括万物.&lt;br
      
    
    </summary>
    
      <category term="瞎扯淡" scheme="https://weibo.com/queshizhiniaoku/home/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>谁是大赢家</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/02/05/%E8%B0%81%E6%98%AF%E5%A4%A7%E8%B5%A2%E5%AE%B6/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/02/05/谁是大赢家/</id>
    <published>2017-02-04T23:07:21.000Z</published>
    <updated>2018-08-24T18:23:41.339Z</updated>
    
    <content type="html"><![CDATA[<p>刚好BGM田馥甄&lt;看淡&gt;,然后翻微博看到我大王微博下有留言P神直播说中单怕你<br>从大学到工作,pis这个认怂,好像真的没那么重要了…鼠大王也已经不是那个教你草pis的他了,还会和pis开开黑什么的…恩仇已过…<br>好像没有什么问题不能会心一笑解决…哪怕是zxx,她过的好,那可真棒!她过的不好,哎呀怎么回事…<br>很难被别人气到了…哦他就是那个样子,我也没什么必要浪费时间说服他,但是对事情还是会很气,比如不好好玩Dota啊,下棋让啊,还是不够恬淡啊…<br>以前特别喜欢别人听从自己的意见,比如买个手机配个电脑什么的,现在就会说我也不是很懂,你问别人吧…因为想一下这他妈关我屁事啊…<br>嘻嘻,现在一切都很好啊<br>祝<br>平安 喜乐</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚好BGM田馥甄&amp;lt;看淡&amp;gt;,然后翻微博看到我大王微博下有留言P神直播说中单怕你&lt;br&gt;从大学到工作,pis这个认怂,好像真的没那么重要了…鼠大王也已经不是那个教你草pis的他了,还会和pis开开黑什么的…恩仇已过…&lt;br&gt;好像没有什么问题不能会心一笑解决…哪怕是z
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>电子竞技没有谦让</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/01/26/%E7%94%B5%E5%AD%90%E7%AB%9E%E6%8A%80%E6%B2%A1%E6%9C%89%E8%B0%A6%E8%AE%A9/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/01/26/电子竞技没有谦让/</id>
    <published>2017-01-26T07:51:22.000Z</published>
    <updated>2018-08-24T18:25:40.744Z</updated>
    
    <content type="html"><![CDATA[<p>要么就光明正大的赢,要么就心服口服的输,这TM多舒服.<br>不清不楚的心里不难受么.<br>虽然现在被老子吊打,但是你小伙子日后棋力精进还可挑战于我对不?<br>TM被让赢了.你说你如何翻盘?舔着脸说再来一把?和你下棋真有意思?<br>这种竞技性的东西又不是喝酒打麻将.<br>管你老丈人还是什么.不服就是干啊<br>​要么技不如人甘拜下风<br>要么EZ GAME,NAIVE PLAYER.<br>不能输就不要玩竞技项目呀.我们喝个酒唱个歌划个拳对不对,你想怎么赢怎么赢.打麻将是吧.没有问题呀.​​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要么就光明正大的赢,要么就心服口服的输,这TM多舒服.&lt;br&gt;不清不楚的心里不难受么.&lt;br&gt;虽然现在被老子吊打,但是你小伙子日后棋力精进还可挑战于我对不?&lt;br&gt;TM被让赢了.你说你如何翻盘?舔着脸说再来一把?和你下棋真有意思?&lt;br&gt;这种竞技性的东西又不是喝酒打麻将.&lt;
      
    
    </summary>
    
      <category term="大喷菇" scheme="https://weibo.com/queshizhiniaoku/home/categories/rude/"/>
    
    
  </entry>
  
  <entry>
    <title>magic</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/01/22/magic/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/01/22/magic/</id>
    <published>2017-01-22T00:10:38.000Z</published>
    <updated>2018-08-24T17:50:37.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="真·兴趣使然"><a href="#真·兴趣使然" class="headerlink" title="真·兴趣使然"></a>真·兴趣使然</h1><p>3点多开始写- -8:11成功.哈哈.终于知道为什么BBP可以很快算出PI的某一位了.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DECPRECISION 5000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOW_MANY_BIT_REQUIRED(a) int((a)*log2(10)) + 3</span></span><br><span class="line"><span class="keyword">int</span> precision;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">beZero</span><span class="params">(<span class="keyword">char</span> *a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">beZero</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinus</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinus</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">const</span> <span class="keyword">int</span> offset)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinusOneAtBit</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">const</span> <span class="keyword">int</span> offset)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAddOneAtBit</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> index)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">binReciprocal</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">int</span> rightMove)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAppendZero</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> aLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">binCompare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">int</span> bLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinusAtDivide</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">int</span> bLen)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">eightTimesNumberToBin</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halfDEC</span><span class="params">(<span class="keyword">char</span> *a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decodeToDEC</span><span class="params">(<span class="keyword">char</span> *a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">valueForBit</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">int</span> bit)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bitAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> bit, <span class="keyword">int</span> value)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">beZero</span><span class="params">(<span class="keyword">char</span> *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="string">'0'</span>, precision - <span class="number">1</span>);</span><br><span class="line">    a[precision - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">beZero</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="string">'0'</span>, len - <span class="number">1</span>);</span><br><span class="line">    a[len - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinus</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = precision - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="string">'1'</span>)</span><br><span class="line">            binMinusOneAtBit(a, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinus</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">const</span> <span class="keyword">int</span> offset)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = precision - <span class="number">1</span> - offset; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="string">'1'</span>)</span><br><span class="line">            binMinusOneAtBit(a, i + offset);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinusOneAtBit</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[index] == <span class="string">'1'</span>)</span><br><span class="line">        a[index] = <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[index] = <span class="string">'1'</span>;</span><br><span class="line">        binMinusOneAtBit(a, index - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = precision - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="string">'1'</span>)</span><br><span class="line">            binAddOneAtBit(a, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">const</span> <span class="keyword">int</span> offset)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = precision - <span class="number">1</span> - offset; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="string">'1'</span>)</span><br><span class="line">            binAddOneAtBit(a, i + offset);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAddOneAtBit</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[index] == <span class="string">'0'</span>)</span><br><span class="line">        a[index] = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[index] = <span class="string">'0'</span>;</span><br><span class="line">        binAddOneAtBit(a, index - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">binReciprocal</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">int</span> rightMove)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(precision * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(result);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">char</span> *buf = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>((len + <span class="number">2</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(buf, len + <span class="number">2</span>);</span><br><span class="line">    buf[<span class="number">0</span>] = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">char</span> *magic = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>((len + <span class="number">2</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    <span class="keyword">bool</span> firstTime = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">bool</span> magicSucceed = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> cycle = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> magicPoint;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len + rightMove; i &lt; precision - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> b = binCompare(buf, a, len);</span><br><span class="line">        <span class="keyword">if</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (firstTime)</span><br><span class="line">            &#123;</span><br><span class="line">                cycle = <span class="number">0</span>;</span><br><span class="line">                magicPoint = i;</span><br><span class="line">                firstTime = <span class="literal">false</span>;</span><br><span class="line">                <span class="built_in">memcpy</span>(magic, buf, len + <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(magic, buf) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                magicSucceed = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            binMinusAtDivide(buf, a, len);</span><br><span class="line">            result[i] = <span class="string">'1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result[i] = <span class="string">'0'</span>;</span><br><span class="line">        cycle++;</span><br><span class="line">        binAppendZero(buf, len + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (magicSucceed)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = magicPoint + cycle; i &lt; precision - <span class="number">1</span>; i++)</span><br><span class="line">            result[i] = result[i - cycle];</span><br><span class="line">    <span class="built_in">free</span>(buf);</span><br><span class="line">    <span class="built_in">free</span>(magic);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binAppendZero</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> aLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; aLen - <span class="number">1</span>; i++)</span><br><span class="line">        a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">    a[aLen - <span class="number">1</span>] = <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">binCompare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">int</span> bLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>] == <span class="string">'1'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bLen; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i + <span class="number">1</span>] &gt; b[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (a[i + <span class="number">1</span>] &lt; b[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binMinusAtDivide</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b, <span class="keyword">int</span> bLen)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bLen; i++)</span><br><span class="line">        <span class="keyword">if</span> (b[i] == <span class="string">'1'</span>)</span><br><span class="line">            binMinusOneAtBit(a, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">eightTimesNumberToBin</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *buf = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">32</span> * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(buf, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp = a;</span><br><span class="line">    <span class="keyword">while</span> (temp &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[index] = temp % <span class="number">2</span> + <span class="string">'0'</span>;</span><br><span class="line">        temp &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> loopTimes = index;</span><br><span class="line">    <span class="keyword">char</span> *result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>((loopTimes + <span class="number">4</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(result, loopTimes + <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loopTimes; i++)</span><br><span class="line">        result[i] = buf[loopTimes - i - <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">free</span>(buf);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decodeToDEC</span><span class="params">(<span class="keyword">char</span> *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>((DECPRECISION + <span class="number">3</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(result, DECPRECISION + <span class="number">3</span>);</span><br><span class="line">    result[<span class="number">0</span>] = <span class="string">'3'</span>;</span><br><span class="line">    result[<span class="number">1</span>] = <span class="string">'.'</span>;</span><br><span class="line">    <span class="keyword">char</span> *buf = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>((DECPRECISION + <span class="number">3</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(buf, DECPRECISION + <span class="number">3</span>);</span><br><span class="line">    buf[<span class="number">1</span>] = <span class="string">'.'</span>;</span><br><span class="line">    buf[<span class="number">2</span>] = <span class="string">'5'</span>;</span><br><span class="line">    <span class="keyword">int</span> aLen = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; aLen; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="string">'1'</span>)</span><br><span class="line">            myAdd(result, buf);</span><br><span class="line">        halfDEC(buf);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> *realResult = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(DECPRECISION * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    <span class="built_in">memcpy</span>(realResult, result, DECPRECISION - <span class="number">1</span>);</span><br><span class="line">    realResult[DECPRECISION - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"PI:%s\n"</span>, realResult);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">halfDEC</span><span class="params">(<span class="keyword">char</span> *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[<span class="built_in">strlen</span>(a) - <span class="number">1</span>] = valueForBit(a, <span class="built_in">strlen</span>(a) - <span class="number">1</span>) / <span class="number">2</span> + <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">strlen</span>(a) - <span class="number">2</span>; i &gt; <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != <span class="string">'0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                a[i + <span class="number">1</span>] += <span class="number">5</span>;</span><br><span class="line">            a[i] = valueForBit(a, i) / <span class="number">2</span> + <span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">valueForBit</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a, <span class="keyword">int</span> bit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[bit] - <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; DECPRECISION + <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] != <span class="string">'0'</span>)</span><br><span class="line">            bitAdd(a, i, valueForBit(b, i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bitAdd</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> bit, <span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (valueForBit(a, bit) + value &gt; <span class="number">9</span>)</span><br><span class="line">        bitAdd(a, bit - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    a[bit] = <span class="string">'0'</span> + (valueForBit(a, bit) + value) % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SYSTEMTIME sys;</span><br><span class="line">    GetLocalTime(&amp;sys);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d/%d %d:%d:%d.%d 星期%d\n"</span>, sys.wYear, sys.wMonth, sys.wDay, sys.wHour, sys.wMinute, sys.wSecond, sys.wMilliseconds, sys.wDayOfWeek);</span><br><span class="line">    precision = HOW_MANY_BIT_REQUIRED(DECPRECISION + <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">char</span> *result = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(precision * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    beZero(result);</span><br><span class="line">    result[<span class="number">1</span>] = <span class="string">'1'</span>;</span><br><span class="line">    result[<span class="number">2</span>] = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i * <span class="number">4</span> &lt; precision - <span class="number">6</span>; i++)</span><br><span class="line">        result[i * <span class="number">4</span> + <span class="number">5</span>] = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; precision / <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *eightTimesValue = eightTimesNumberToBin(i);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(eightTimesValue);</span><br><span class="line">        binAddOneAtBit(eightTimesValue, len - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">char</span> *result1 = binReciprocal(eightTimesValue, <span class="number">0</span>);</span><br><span class="line">        binAdd(result, result1, i * <span class="number">4</span>);</span><br><span class="line">        <span class="built_in">free</span>(result1);</span><br><span class="line">        binAddOneAtBit(eightTimesValue, len - <span class="number">2</span>);</span><br><span class="line">        binAddOneAtBit(eightTimesValue, len - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">char</span> *result2 = binReciprocal(eightTimesValue, <span class="number">1</span>);</span><br><span class="line">        binMinus(result, result2, i * <span class="number">4</span>);</span><br><span class="line">        <span class="built_in">free</span>(result2);</span><br><span class="line">        binAddOneAtBit(eightTimesValue, len - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">char</span> *result3 = binReciprocal(eightTimesValue, <span class="number">2</span>);</span><br><span class="line">        binMinus(result, result3, i * <span class="number">4</span>);</span><br><span class="line">        <span class="built_in">free</span>(result3);</span><br><span class="line">        binAddOneAtBit(eightTimesValue, len - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">char</span> *result4 = binReciprocal(eightTimesValue, <span class="number">2</span>);</span><br><span class="line">        binMinus(result, result4, i * <span class="number">4</span>);</span><br><span class="line">        <span class="built_in">free</span>(result4);</span><br><span class="line">    &#125;</span><br><span class="line">    GetLocalTime(&amp;sys);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d/%d %d:%d:%d.%d 星期%d\n"</span>, sys.wYear, sys.wMonth, sys.wDay, sys.wHour, sys.wMinute, sys.wSecond, sys.wMilliseconds, sys.wDayOfWeek);</span><br><span class="line">    decodeToDEC(result);</span><br><span class="line">    GetLocalTime(&amp;sys);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d/%d %d:%d:%d.%d 星期%d\n"</span>, sys.wYear, sys.wMonth, sys.wDay, sys.wHour, sys.wMinute, sys.wSecond, sys.wMilliseconds, sys.wDayOfWeek);</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;真·兴趣使然&quot;&gt;&lt;a href=&quot;#真·兴趣使然&quot; class=&quot;headerlink&quot; title=&quot;真·兴趣使然&quot;&gt;&lt;/a&gt;真·兴趣使然&lt;/h1&gt;&lt;p&gt;3点多开始写- -8:11成功.哈哈.终于知道为什么BBP可以很快算出PI的某一位了.&lt;br&gt;&lt;figure
      
    
    </summary>
    
      <category term="编程" scheme="https://weibo.com/queshizhiniaoku/home/categories/programming/"/>
    
    
  </entry>
  
  <entry>
    <title>胡言乱语</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/01/18/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/01/18/胡言乱语/</id>
    <published>2017-01-17T16:04:50.000Z</published>
    <updated>2018-08-24T18:21:36.502Z</updated>
    
    <content type="html"><![CDATA[<p>讲道理人生观这种高大上的词汇我实在是觉得我没资格用.<br>正如有些蠢狗看了两眼XXX,最近在研究这个XXX,研NMB.<br>看到朋友圈我亲亲爱的说的乱七八.也想了一下自己这个选手的游戏态度.<br>首先我觉得我比较在意做某事过程中的感受.<br>这些感受我最在意的是改变.<br>改变人类为最高.然而只能嘴炮一下.<br>今天看了一条微博,很多人都觉得很积极.就是说人的生命短暂啊,然后眼前的苟且不过是历史长河中的一瞬而已.那我就觉得很消极啊.这种说法连个存在的痕迹都没有.<br>改变自己也是很开心的.比如换一个暴躁的光头啊,或者突然转型当Cpp程序员.<br>然后就是第一次.第一次喝断片儿?第一次步行20km?第一次吃两碗牛肉面?第一次两个人生活?<br>我还喜欢把未知变为一知半解(涉猎级).<br>比如无聊的开地图活动.我就痴迷于此.这里是通向哪里的,都有什么店之类的.我觉得这是一件很有趣的事情啊.​<br>我觉得是否要去做一件事情的话,我这里只考虑我做这件事的感受是怎样的.我又需要怎样的感受.比如内心柔软有一个心爱的姑娘的时候,就会去看韩剧.我觉得看韩剧在很多时候都是浪费时间的.但是我很喜欢那种感受.所以内心柔软的时候我会看韩剧.<br>或者说辞职.辞职的感受就是一身轻松.当然事后如何按住不表.那我觉得我受到的约束大到我认为需要这样一身轻松的感受的时候,我就要辞职.<br>那还有亲亲爱提到的旅游拍照的问题.我也喜欢拍照但是我比较喜欢那种天地辽阔的照片或者天工造化神奇的​照片,或者第一次见到某物.但是我觉得拍照这个事情也是看感受的啊.有时候需求的是躺翻在地上大字形,太阳晒得睁不开眼,安静祥和的感受.这个时候为什么要拍照啊.我感觉吧,需求做拍照这件事情的感受,应该是’我操?’<br>我为什么在短短的一个2017年,变得极度想结婚.因为离家的感受很不好,没有一种拥有的感觉.买手机什么的很随便毕竟随身携带.但是像书桌啊,书架啊,弃之可惜带之不走..就是说在自己带来的板子上画画和在地上用石头画,肯定是不一样的啊.<br>就这么多吧.我还不能solo个房子.空谈!​​​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;讲道理人生观这种高大上的词汇我实在是觉得我没资格用.&lt;br&gt;正如有些蠢狗看了两眼XXX,最近在研究这个XXX,研NMB.&lt;br&gt;看到朋友圈我亲亲爱的说的乱七八.也想了一下自己这个选手的游戏态度.&lt;br&gt;首先我觉得我比较在意做某事过程中的感受.&lt;br&gt;这些感受我最在意的是改变
      
    
    </summary>
    
      <category term="瞎扯淡" scheme="https://weibo.com/queshizhiniaoku/home/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>?竟然有点儿想不再漂泊</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/01/13/%E7%AB%9F%E7%84%B6%E6%9C%89%E7%82%B9%E5%84%BF%E6%83%B3%E4%B8%8D%E5%86%8D%E6%BC%82%E6%B3%8A/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/01/13/竟然有点儿想不再漂泊/</id>
    <published>2017-01-12T22:44:35.000Z</published>
    <updated>2018-08-24T18:20:20.735Z</updated>
    
    <content type="html"><![CDATA[<p>小时候会把自己喜欢的东西刻成光盘,保留起来…(CD并非DVD)…好像保留下来了很多…<br>最近突然感悟,纸质的东西好像更恒久一些…年轻的时候会有那种人工写一堆话的小册子礼物,摧毁之的想法产生又被扼杀,反反复复拖几年还是噼里啪啦火花带闪电消失于世界…<br>反观现在的,删个好友毫不犹豫…(………突然想起来聊天记录.txt的梗…啊那个也不见了…好像有1 200多k)…<br>那这样我就需要一个彩色打印机…<br>那我觉得携带家当漂泊的话,台式机一拆,衣服包好主板显卡,内存放在袜子里,硬盘包包,电源包包,下一站幸福…显示器键盘什么要是想要还可以快递…<br>可是打印机怎么办…弃之可惜,带着乱跑乱七八又会越来越多…<br>还有书,好重啊!<br>我感觉我就像一个滾在雪地的雪球,越来越大,好想安定下来呀…<br>哪怕自己一个人,也应该买一套房子…建设起来…<br>一个人的话我喜欢卫生间巨大(可以放下2*2浴缸),厨房tiny,餐厅客厅一个卧室这样的户型…<br>闭眼基本能构思出来具体的装修什么的…虽然这样的户型很难有,但是首先我得有钱…<br>那我觉得还是扔个打印机比较现实…<br>可是现在觉得自己活的好糙啊…只是活着…哎呦还是母巢精致,然而我这么优秀的选手需要回家找妈妈?<br>阿西吧!何以解忧唯有暴富…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小时候会把自己喜欢的东西刻成光盘,保留起来…(CD并非DVD)…好像保留下来了很多…&lt;br&gt;最近突然感悟,纸质的东西好像更恒久一些…年轻的时候会有那种人工写一堆话的小册子礼物,摧毁之的想法产生又被扼杀,反反复复拖几年还是噼里啪啦火花带闪电消失于世界…&lt;br&gt;反观现在的,删个
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>我为什么觉得自己的归属是一个有我自己风格的文具店</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2017/01/03/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A7%89%E5%BE%97%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BD%92%E5%B1%9E%E6%98%AF%E4%B8%80%E4%B8%AA%E6%9C%89%E6%88%91%E8%87%AA%E5%B7%B1%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%96%87%E5%85%B7%E5%BA%97/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2017/01/03/我为什么觉得自己的归属是一个有我自己风格的文具店/</id>
    <published>2017-01-03T09:43:48.000Z</published>
    <updated>2018-08-24T18:19:40.201Z</updated>
    
    <content type="html"><![CDATA[<p>可能和小时候零花钱少有关系,从小就喜欢小玩具,软件店之类的小店铺.和高大上的什么乐器啊,什么滑板啊,乱七八并不搭界.<br>小时候喜欢的店铺有四种,一种是动漫周边店-.-,然而我觉得我现在对动漫什么的并没有理解.而且也不看.应该不能做的很好.<br>还有一种是玩具店,四驱车,悠悠球,益智玩具,模型,这些东西我感觉距离现在的孩子们越来越远,虽然我想做,​​​但是想必也受众极小,想来想去都不知道应该开设在哪里父母才愿意带着孩子来逛逛.<br>​另一种就是软件店了.嘻嘻- -我觉得正版游戏好像都是用来送生日礼物的(我自己玩的3,4元的盗版,送你一定是59,69的正版).不过现在的孩子们的设备哪还有光驱.况且我宿菲菲大魔王都讲STEAM要改变世界了.这种店只能成为记忆了吧.麻痹EA的那个垃圾O什么平台什么时候GG啊,我操,欠NFS一个正版.<br>那最后一种就是文具店了.​我上第一家初中的两年时间里,每天都会经过一家夫妻经营的文具店,那家店东西很便宜,但是外观啊,牌子啊(好像只有晨光.)都是一个学生的经济可以承受的.上了第二家初中以后,也会经常去一家文具店,内容同样精致.相比用笔写字我更喜欢用笔毫无目的的瞎逼画.这个毫无目的就是说几乎和闭着眼睛画一样,完全不是对自己绘画水平的谦虚.只是用笔在之上留下了痕迹.从钢笔墨水颜色的比较,到水彩笔彩铅蜡笔油画棒笔迹的比较,不同牌子的油画棒有什么特点,彩铅画起来是什么样的感觉.巧克力味的中性笔.啊呦感觉好娘.我记得小时候自己调配墨水(天知道我小时候从哪里看到的茶叶变墨水的梗.)​,是那种深一点儿的绿色.写了一次作业被老师骂了一波就不是很喜欢做这件事情了.老子年轻的时候,TM真是为非作歹.微波炉炸鸡蛋.BOOOOOOOOOOOM的一声,微波炉和盘丝洞一样.那个味儿.我操..出奇的是居然没被骂.说到这个气味儿.小时候还喜欢把厨房可以看到的粉末啊,液体啊,都放在一起.​那个味儿也是巨不咋样,玩的多了就发现只需要醋和碱就够了.还有电热烧糊手的味道.也是难忘的记忆.(电动火花小跑车- -作者对产品的命名.),那个是自然课发的手工包里面一个平板气球车(风力推进的.)感觉阻力很小.于是把那个塑料书皮一边的夹子剪的刚好放两个五号电池.然后粘在那个小气球车上,再割一个,烧红轮胎轴,粘个齿轮上去.然后拿个马达,就可以跑,但是小时候器材不是很专业,没有焊锡和电烙铁,只能把导线用胶带粘在那个电池的两端.这就很尴尬了.经常接触不良,必须用手按.我去.现在都记得那个疼.和小刀刮了一下一样.- -这尼玛现在看来小时候做工还是粗糙,就电源接个用电器,都有可能短路?一路跑起来火花闪的飞起.我小时候可以移动的玩具比较多.最痛心的就是一个柴油小火车,因为不是很懂啊,柴油和尿都是黄色的…..于是和我表弟一起尿了一波.啊呦……心酸成一匹野马.​​小时候是个愚蠢的青年.那种和两个大拇指一样大的遥控车上拆下来的动力系统就叫电机.而四驱车上那种规格的就叫马达.我爸也是比较固执,坚称我的那些都叫电机.这就是很尴尬的了.讲道理我和我爸为玩具争执也很多.比如那时候流行铁胆火车侠,TM哪个孩子不想要个希望号,我操我爸强行要给我买银色魔头号??后来老子就觉得,操,那我还不如不要.从小就是刚猛的1B.虽然哭的稀里哗啦的,但是你再买什么老子也不要了.<br>麻痹呦.我TM是要开文具店的男人,总是说玩具搞毛啊.讲道理其实现在的模型啊什么的,都很难在国内买到,要是有个关系很铁的国外朋友,倒是也可以做一些面向成人怀旧的店,比如田宫专卖?= =还有就是开个打火机专卖店?讲道理老夫淘宝经常买ZIPPO的店铺有两家,感觉都挺逼真的呀.如何保证自己卖的是正品就很难搞了.所以还是开个文具店.稳健的1B.<br>早晨孩子们上学的时候忙一会儿,然后闲下来的时间里,做一做自己感兴趣的外包项目,11点多吃个饭,中午再迎接一波孩子们,我觉得可能将来店铺大一点儿就会发展成为一个.具有桌游区,模型区,文具区,掌机区,啊呦.再这样发展下去,迟早被家长砸了.不管怎么说.我觉得开一个文具店,真的好适合我这种,优哉游哉的性格啊.​<br>开个文具店的话,寒暑假还能旅个游什么的.​而且做做外包什么的,也挺有意思,还能小赚一波.但是讲道理我这个家庭实在是太传统了.真心的,士农工商一定没错.反正从商就一定GG.我就不是很想上高中,我想去蓝翔之类的技工学校.后来因为经济不能独立只能去上高中.后来不想上大学,想开个奶茶咖啡店.也被^&amp;<em>$%#^&amp;$@%$</em>.真是一辈子的痛点.现在经济独立了.我一定要按自己想的来,27岁天才程序员的陨落?- -老脸一红.<br>我就是要开文具店!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可能和小时候零花钱少有关系,从小就喜欢小玩具,软件店之类的小店铺.和高大上的什么乐器啊,什么滑板啊,乱七八并不搭界.&lt;br&gt;小时候喜欢的店铺有四种,一种是动漫周边店-.-,然而我觉得我现在对动漫什么的并没有理解.而且也不看.应该不能做的很好.&lt;br&gt;还有一种是玩具店,四驱车
      
    
    </summary>
    
      <category term="瞎扯淡" scheme="https://weibo.com/queshizhiniaoku/home/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>那样的人</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2016/12/30/%E9%82%A3%E6%A0%B7%E7%9A%84%E4%BA%BA/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2016/12/30/那样的人/</id>
    <published>2016-12-29T22:14:08.000Z</published>
    <updated>2018-08-24T18:17:46.630Z</updated>
    
    <content type="html"><![CDATA[<p>好希望成为那种人…<br>谦谦君子温润如玉<br>不卑不亢宠辱不惊<br>临危不乱处变不慌<br>像流水,像大山,绝难被环境影响<br>有些情况总是会变得跳脱起来…<br>自我安慰啊呦这都是自己人而且大家都那样,小人得志的样子,我也必须来一发…<br>然后开始浮夸的装逼,就问你们6不6?老夫叼不叼?<br>好像已经不在是作为一种喜悦的表达形式,而是为了这样而这样…<br>而且在我这里谦谦君子温润如玉一定是和陌生人,在熟人面前简直…阿西吧…会爆粗口说脏话,而且总是觉得理所当然?毕竟自己人大家都能理解?真是垃圾逻辑…<br>不卑不亢和宠辱不惊是因为自己总是把不熟的人当猴子,语气谦冲有礼,一点儿也不想被猴子惹生气,况且我一个人在猴子面前有什么卑,有什么辱…就是不在乎,而不是尊重别人的同时又含蓄内敛,纷吾既有此内美兮又重之以修能…完全就是两个概念…<br>临危不乱处变不惊也不是成竹在胸运筹帷幄,而是知道慌乱也没用不如走一步看一步…<br>唉,不管是精神,思想还是能力,都不足以……所以感觉时间不多了…2017年还是应该高度重视的…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好希望成为那种人…&lt;br&gt;谦谦君子温润如玉&lt;br&gt;不卑不亢宠辱不惊&lt;br&gt;临危不乱处变不慌&lt;br&gt;像流水,像大山,绝难被环境影响&lt;br&gt;有些情况总是会变得跳脱起来…&lt;br&gt;自我安慰啊呦这都是自己人而且大家都那样,小人得志的样子,我也必须来一发…&lt;br&gt;然后开始浮夸的装逼,就
      
    
    </summary>
    
      <category term="日常" scheme="https://weibo.com/queshizhiniaoku/home/categories/daily/"/>
    
    
  </entry>
  
  <entry>
    <title>我这个2016年</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2016/12/27/%E6%88%91%E8%BF%99%E4%B8%AA2016%E5%B9%B4/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2016/12/27/我这个2016年/</id>
    <published>2016-12-26T17:58:26.000Z</published>
    <updated>2018-08-24T18:16:43.109Z</updated>
    
    <content type="html"><![CDATA[<p>讲道理我还记得我那个2015年是想写一篇长长的总结的…结果浓缩成一句话碌碌无为…<br>今年不管怎样我也要写一篇长长的总结的…<br>今年总体来说不如没有…<br>极度的不满意今年的所做所为…<br>不过明白了两个相当重要的道理…<br>一个是团队与个人英雄主义的取舍…<br>一个是奇怪的事情发生一定有深层次的原因,所见一定不完全…<br>嗯,然后体验了一波流浪汉的生活(如何夜不归宿且不进入非露天场所)<br>今年的酒场要少一些了,因为北京这边并没有放的开的朋友,都扭扭捏捏的…不过开心的场有两次吧…<br>然后断断续续的戒烟,近几周已经没有吸了…而且好像也不是很必要的个东西…<br>也有了令自己后悔的事情…那这个就很尴尬了,老子这么洒脱的一个选手…<br>然后对代码的理解又提高了一个层次…不再是肤浅的命名习惯编码习惯这些了,感谢两次成为面试官并且疯狂面试的机会…<br>还发现自己是一个刚猛的选手,感觉怎样的生活都可以很开心…<br>在中学门口开一个文具店的想法越来越按耐不住…实在是喜欢各种各样的文具…我觉得我这个审美虽然问题不小但是也应该有人理解…大不了什么样子的都进一些咯…<br>今年完全没有心境读一些乱七八的书,复读了哈利波特还有金庸一些书(我估计明年还有后半句毕竟年年如此),我特别希望能看完海子的诗,可是翻开就觉得首先…然后再加上一些过分梦幻的词句让我实在不爱看…很难想象这个选手的心路历程,最后是怎样成为一个面朝大海春暖花开的豁达人士…<br>删了一波微博简直难过极了…我那些喜欢极了的段子一条都找不到了…今年一定好好积累…</p><h1 id="2017年的计划"><a href="#2017年的计划" class="headerlink" title="2017年的计划"></a>2017年的计划</h1><p>首先我觉得我一定要买我的表了,特么2016年已然黑了…<br>然后找一个稳健的公司稳健的干他一年?这个还是看情况吧…<br>嗯…打算去成都/杭州吧…然而想想都热的飞起…或者就还在北京吧虽然交通真是…<br>其实我还是想和那个谁结个婚的…然而…<br>要是结婚的话上面就是几行删除线然后见机行事.<br>特别想看的书就没有…特别想买的书倒是很多…<br>有健身的可能?这个也要看情况吧…生命诚可贵为何要把时间放在一些自己并不是很擅长的事情上呀…<br>啊我还要去一次东北…一次莫高窟…optional的西双版纳自治州…<br>这个莫高窟是非去不可的…工作爱情皆可抛的那种…<br>然后好像就是刷钱花钱的日常了…<br>要是换了城市我一定要弄个自杭驹,我觉得那还是一项无忧无虑,天地开阔的活动…<br>然后…唉…憧憬太多容易兴奋的睡不着觉…就到此为止吧…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;讲道理我还记得我那个2015年是想写一篇长长的总结的…结果浓缩成一句话碌碌无为…&lt;br&gt;今年不管怎样我也要写一篇长长的总结的…&lt;br&gt;今年总体来说不如没有…&lt;br&gt;极度的不满意今年的所做所为…&lt;br&gt;不过明白了两个相当重要的道理…&lt;br&gt;一个是团队与个人英雄主义的取舍…&lt;b
      
    
    </summary>
    
      <category term="瞎扯淡" scheme="https://weibo.com/queshizhiniaoku/home/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>想什么当然</title>
    <link href="https://weibo.com/queshizhiniaoku/home/2016/12/03/%E6%83%B3%E4%BB%80%E4%B9%88%E5%BD%93%E7%84%B6/"/>
    <id>https://weibo.com/queshizhiniaoku/home/2016/12/03/想什么当然/</id>
    <published>2016-12-03T10:49:03.000Z</published>
    <updated>2018-08-24T18:15:13.202Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>π，圆周长与其直径之比，这是开始。后面一直有，无穷无尽。永不重复。就是说在这串数字中，包含每种可能的组合。你的生日，储物柜密码，你的社保号码，都在其中某处。如果把这些数字转换为字母，就能得到所有的单词，无数种组合。你婴儿时发出的第一个音节，你心上人的名字，你一辈子从始至终的故事，我们做过或说过的每件事，宇宙中所有无限的可能，都在这个简单的圆中。用这些信息做什么，它有什么用，取决于你们。<br>我以为上述这些话是正确的,因为毕竟后面一直有,永不重复,出现什么可能性都有…<br>刚才才知道,0.202002000200002…这样一个后面一直有,永远不重复的数,并不包含你的生日…<br>没有严谨的证明,什么结论都是想当然</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;π，圆周长与其直径之比，这是开始。后面一直有，无穷无尽。永不重复。就是说在这串数字中，包含每种可能的组合。你的生日，储物柜密码，你的社保号码，都在其中某处。如果把这些数字转换为字母，就能得到所有的单词，无数种组合。你婴儿时发出的第一个音节，你心上人
      
    
    </summary>
    
      <category term="思考" scheme="https://weibo.com/queshizhiniaoku/home/categories/think/"/>
    
    
  </entry>
  
</feed>
